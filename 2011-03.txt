1: {text: "=== BMI Class ===\n\n- Discussion of read only word -> imagine scenarios\
    \ where you need real time updates (e.g., child transfer from hospital to hospital\
    \ after stabilization).\n\n- Data Warehouse\n - find unknown conditions for patient\n\
    \ - most often found in practice: drug abuse by patients\n\nmultiple providers\
    \ issue for the cloud.\n\n\nimagine having two screens for looking at patient\
    \ data when you are a physician, local and remote -> this could be acceptable\n\
    \nhow about putting warehouse, SOA and security methodologies into UML\n\n**how\
    \ about putting the cloud in there, too??**\n\nrelation publisher/subscriber and\
    \ SMArt?\n\nlook at the hybrid architecture again, get the cloud in there\n\n\
    get the service oriented/cloud slides that are already on the page, he is going\
    \ to skip them"}
3: {text: '=== BMI Class ===


    Dynamic Coalitions


    multiple crisis at the same time

    multiple organizations -> thing not only governments, but also things like red
    cross, and so on... '}
15:
  Todo: {Wireless - Lab 3: null}
  text: "===Wireless===\nGraduate students: (1) write critic reviews for these two\
    \ papers. (2) compare S-MAC and B-MAC. \n\n**S-MAC**\n- Expectation: deployment\
    \ in ad-hoc fashion, inactive nodes until something is detected\n\n- Goals:\n\
    \ - energy conservation\n - self-configuration (for scalability and adaptivity)\n\
    \ - improve on  802.11-like MAC protocols\n - Secondary: per-node fairness and\
    \ latency\n\n- Key characteristis of S-MAC:\n - low-duty-cycle operation in a\
    \ multihop network\n  - periodically putting nodes into sleep state (radio completely\
    \ turned off)\n  - Coordinated sleeping amongh neighbor nodes\n  - Sleeping is\
    \ default idle operation in contrast to other MAC protocols\n  - this increases\
    \ latency, since sender might have to wait for a reciever to wake up\n   - suggestion\
    \ to counter this with //adaptive listening//\n\n - virtual clusters based on\
    \ common sleep schedules to reduce control overhead and enable traffic-dependent\
    \ wake-up\n\n - in-channel signaling to avoid overhearing unnecessary traffic\
    \ (control overhead)\n\n - message passing to reduce contention latency\n  - divide\
    \ long message in small fragements and transmit them in a burst\n  - node with\
    \ more data to send has longer access to the medium -> unfair for nodes sending\
    \ short packages\n\n - in-network data processing\n  - data aggregation\n  - collaborative\
    \ signal processing\n  - requires store-and-forward processing of messages\n \
    \ - MAC protocols that promote fragment-level fairness actually increase message-level\
    \ latency\n  - message passing reduces message-level latency by trading off the\
    \ fragment-level fairness\n\n- Demonstration of fundamental tradeoffs between\
    \ energy, latency and throughput \n- Sources of energy waste\n - Collision\n -\
    \ Overhearing\n - Control packet overhead\n - Idle listening\n\n\n\n\n\n\n**NOTES**\n\
    - [Media Access Control (MAC) \"\"http://en.wikipedia.org/wiki/Media_Access_Control\"\
    \"]: The Media Access Control (MAC) data communication protocol sub-layer, also\
    \ known as the Medium Access Control, is a sublayer of the Data Link Layer specified\
    \ in the seven-layer OSI model (layer 2). It provides addressing and channel access\
    \ control mechanisms that make it possible for several terminals or network nodes\
    \ to communicate within a multi-point network, typically a local area network\
    \ (LAN) or metropolitan area network (MAN). The hardware that implements the MAC\
    \ is referred to as a Medium Access Controller.\n\nThe MAC sub-layer acts as an\
    \ interface between the Logical Link Control (LLC) sublayer and the network's\
    \ physical layer. The MAC layer emulates a full-duplex logical communication channel\
    \ in a multi-point network. This channel may provide unicast, multicast or broadcast\
    \ communication service.\n\nhttp://www.thatfilmsite.org/watch-1542947-Skyline\n\
    http://www.megavideo.com/?v=UO6LCREX"
20:
  Research: {References: null, Reviews: null}
  Todo: {'**ICSOFT11 Paper Review**': null}
  text: "=== ICSOFT11 Paper Review===\n\n33: **Transactions And Cloud Databases**\n\
    \ \n//Abstract/Introduction:// \n- Somewhat incoherent: What exactly are the shortcomings\
    \ of ElasTras, VoltDB and Xeround compared to Pyrrho DBMS\n- What are the mentioned\
    \ \"elegant solutions\" for preserving ACID properties in transactions\n- It is\
    \ not becoming clear that the Pyrrho DBMS is at the center of interest. \n- A\
    \ non existing \"section 8\" is being referenced \n- \"Optimistic concurrency\
    \ model\" is used throughout the paper but never defined.\n\n\n//Partitioning\
    \ a Database://\n- What are the implications/challanges of partitioning a database.\
    \ Or is this a straight forward process? Answering this in place would be important\
    \ for the reader.\nTypo: \"Pyrrho only modified...\" should spell \"Pyrrho only\
    \ modifies...\" or be explained further.\n- Not detailed enough example in the\
    \ last paragraph. Is this describing a failover mechanism? In hich way does the\
    \ presumably distributed and moved to another server data reappear in the base\
    \ database without additional effort? An explenation in greater detail is required.\n\
    \n\n//Example Partitioning Example://\n- The client needs knowledge of the nature\
    \ of the partitioning. Are there suggestions on how to handle this?\n\n\n//Cloud\
    \ Computing//\n- Referencing a not included section 10\n- Differences between\
    \ direct and indirect access should be explained more\n- Referencing a not included\
    \ section 8.5\n\n\n//Transaction Rate and Benchmarking//\n- Figure using confusing\
    \ non-sense entries\n\n\n//Conclusion//\n- Referred to discussion of SQL2008 complience\
    \ and ACID requirements are not given in the paper.\n\n\n\n**Notes**\n\n[OLTP\
    \ \"\"http://en.wikipedia.org/wiki/Online_transaction_processing\"\"] - Online\
    \ transaction processing\n\n [ACID \"\"http://en.wikipedia.org/wiki/ACID\"\"](atomicity,\
    \ consistency, isolation, durability)\n\nThe [CAP theorem \"\"http://en.wikipedia.org/wiki/CAP_theorem\"\
    \"], also known as Brewer's theorem, states that it is impossible for a distributed\
    \ computer system to simultaneously provide all three of the following guarantees:\n\
    + Consistency (all nodes see the same data at the same time)\n+ Availability (node\
    \ failures do not prevent survivors from continuing to operate)\n+ Partition tolerance\
    \ (the system continues to operate despite arbitrary message loss)\n\n\n[Stored\
    \ procedures \"\"http://en.wikipedia.org/wiki/Stored_procedure\"\"]: A stored\
    \ procedure is a subroutine available to applications accessing a relational database\
    \ system. Typical uses for stored procedures include data validation (integrated\
    \ into the database) or access control mechanisms.\n\n[Serialization \"\"http://en.wikipedia.org/wiki/Serialization\"\
    \"]: In computer science, in the context of data storage and transmission, serialization\
    \ is the process of converting a data structure or object into a format that can\
    \ be stored (for example, in a file or memory buffer, or transmitted across a\
    \ network connection link) and \"resurrected\" later in the same or another computer\
    \ environment\n\n38: **AUTOMATIC INSERTION OF BUSINESS RULES IMPLEMENTATION IN\
    \ RELATIONAL DATABASE**\n\n//General//\n- Incorrect grammer\n- Convoluted senetence\
    \ structure\n- Insufficient interpunction\n- Formating errors (incorrect line\
    \ breaks)\n- Inconsistent senetence structures hinder understanding\n- Pieces\
    \ of examples are not clearly seperated from text flow\n- Invalid XML in examples\n\
    - Poorly formated tables\n- Exemples are given in a mix of Spanish and English\n\
    - Granularity of section numbering is too high\n- Duplicates in reference list\n\
    - Very limited presentation of related work\n- Literal repetitions  \n\n\n===Future\
    \ Reads===\n\nChang, F.; Dean, J.; Ghamawat, S.; Hsieh, W. C.; \nWallach, D. A.;\
    \ Burrows, M.; Chandra, T.; Fikes, A.; \nGruber, R. (2008): Bigtable: A Distributed\
    \ Storage \nSystem for Structured Data, ACM Transactions on \nComputer Systems,\
    \ 26.2, article no. 4.\n\nKossmann, D.; Kraska, T.; Loesing, S. (2010): An \n\
    Evaluation of Alternative Architectures for Transaction \nProcessing in the Cloud,\
    \ SIGMODâ€™10, Indianapolis, \nUSA (ACM) ISBN 978-1-4503-0032 \n"
29:
  Tags: {BMI: null}
  text: '=== BMI ===

    Joint class with public science Professor (mainly about security)'
31: {text: '=== BMI ===

    DoD guest talk'}
